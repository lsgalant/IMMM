// Template: path

PSI_TOKEN.sval := PSI_SIZE;

#define HEADINGFIELD(val) LABEL VALUE(val) JUSTIFY(center, center) HSTRETCH

PSI_TOKEN.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.15, 0.05)
    
    SWITCHER tight
    {
	VALUE(PSI_TOKEN.sval) LAYOUT(overlap) HSTRETCH

	{
	    LAYOUT(horizontal) HSTRETCH
#if PSI_USE_LABEL
	    LABEL "PSI_LABEL" HSTRETCH;
#endif
	}
	    
	{
	    LAYOUT(horizontal) HSTRETCH
#if PSI_USE_LABEL
	    LABEL "PSI_LABEL":1.5;
#endif
	    HEADINGFIELD(PSI_TOKEN.val[0]);
	}
	    
	{
	    LAYOUT(horizontal) HSTRETCH
#if PSI_USE_LABEL
	    LABEL "PSI_LABEL":1.5;
#endif
	    HEADINGFIELD(PSI_TOKEN.val[0]);
	    HEADINGFIELD(PSI_TOKEN.val[1]);
	}
	{
	    LAYOUT(horizontal) HSTRETCH
#if PSI_USE_LABEL
	    LABEL "PSI_LABEL":1.5;
#endif
	    HEADINGFIELD(PSI_TOKEN.val[0]);
	    HEADINGFIELD(PSI_TOKEN.val[1]);
	    HEADINGFIELD(PSI_TOKEN.val[2]);
	}
	{
	    LAYOUT(horizontal) HSTRETCH 
#if PSI_USE_LABEL
	    LABEL "PSI_LABEL":1.5;
#endif
	    HEADINGFIELD(PSI_TOKEN.val[0]);
	    HEADINGFIELD(PSI_TOKEN.val[1]);
	    HEADINGFIELD(PSI_TOKEN.val[2]);
	    HEADINGFIELD(PSI_TOKEN.val[3]);
	}
    }
    SEPARATOR;
}

#undef HEADINGFIELD